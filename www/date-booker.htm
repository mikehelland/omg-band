<!DOCTYPE html>
<html>
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
        <link rel="stylesheet" href="/css/main.css" type="text/css" />

        <style>
            textarea {width: 300px; height: 100px;}

            #dndupload {padding: 40px;
            }
            .drop-zone-hover {
                padding: 30px !important;
                border: 10px dashed #1db918;
            }
            .attachment {
                border: 1px solid black;
                padding: 10px;
            }

        </style>

    </head>
    <body>

        <div class="title-bar-user-controls"></div>

        <div class="main-body">

            <h1>Add Gig</h1>

            Status: 
            <br>
            <select id="input-status">
                <option value="PROPOSED">Proposed</option>
                <option value="CONFIRMED">Confirmed</option>
                <option value="PLAYED">Played</option>
            </select>

            <br>
            Who/What: 
            <br>
            <input id="input-whowhat">
            <br>
            When:
            <br>
            <input id="input-when">
            <br>
            Where:
            <br>
            <input id="input-where">
            <br>
            Promote (eg, public gig, display on calendar): 
            <br>
            <input id="input-promote" type="checkbox">
            <br>
            Ticket Price: 
            <br>
            <input id="input-ticketprice">
            <br>
            Equipment (PA? Stage?):
            <br>
            <input id="input-equipment">
            <br>
            Notes:
            <br>
            <textarea id="input-notes"></textarea>
            <br>
            
            
            <button id="submit-button">Submit</button>

            <br>
            <br>
            Attachments:
            <div id="dndupload">(Drag and Drop Files Here)</div>
            <div id="attachment-list"></div>
            <br>
            <br>


        </div>

        <script src="/js/usercontrols.js"></script>

        <script src="/js/omgservice.js"></script>
        <script type="module">
        import DnDUpload from "/js/dndupload.js"
        

        var gig = {type: "GIG"}

        var inputs = {whowhat: document.getElementById("input-whowhat"),
            promote: document.getElementById("input-promote"),
            when: document.getElementById("input-when"),
            where: document.getElementById("input-where"),
            equipment: document.getElementById("input-equipment"),
            notes: document.getElementById("input-notes"),
            status: document.getElementById("input-status"),
            submit: document.getElementById("submit-button"),
            ticketPrice: document.getElementById("input-ticketprice")
        };

        var setInputs = (data) => {
            inputs.whowhat.value = data.whowhat
            inputs.when.value = data.when
            inputs.where.value = data.where
            inputs.equipment.value = data.equipment
            inputs.notes.value = data.notes || ""
            inputs.status.value = data.status
            inputs.promote.checked = data.promote
            inputs.ticketPrice.value = data.ticketPrice || ""
            
            if (data.attachments) {
                data.attachments.forEach(media => makeAttachmentEl(media))
            }
        }

        var getInputs = () => {
            gig.whowhat = inputs.whowhat.value
            gig.when = inputs.when.value
            gig.where = inputs.where.value
            gig.notes = inputs.notes.value
            gig.equipment = inputs.equipment.value
            gig.status = inputs.status.value
            gig.promote = inputs.promote.checked
            gig.ticketPrice = inputs.ticketPrice.value
        }

        var setupPage = () => {
            var params = omg.util.getPageParams();
            if (params.id) {
                omg.server.getId(params.id, function (response) {

                    setInputs(response)

                    gig = response
                });
            }
        }

        document.getElementById("submit-button").onclick = function () {
            
            if (!inputs.whowhat.value && !inputs.whowhat.when && !inputs.whowhat.where) {
                alert("Look blank.")
                return
            }

            getInputs()

            omg.server.post(gig, function (response) {
                if (response.id) {
                    window.location = "/view/" + response.id;
                }
            });
        }

        var userControls = document.getElementsByClassName("title-bar-user-controls")[0]
        omg.ui.setupUserControls(userControls, setupPage, () => {
            if (!omg.user) {
                window.location = "/signin.htm?fwd=" + encodeURIComponent(window.location.href)
            }
            document.getElementsByClassName("main-body")[0].innerHTML = 
                "<h3>" + userControls.innerHTML + "</h3>"
        });




        var dndupload = new DnDUpload()
        var dropZone = document.getElementById("dndupload")
        var attachmentList = document.getElementById("attachment-list")
        
        var makeAttachmentEl = media => {
            var div = document.createElement("div")
            div.className = "attachment"
            attachmentList.appendChild(div)

            div.innerHTML = media.mimeType + ": " + media.name + " <a href='" + media.url + "'>" + media.url + "</a>"
            
            var removeDiv = document.createElement("div")
            removeDiv.style.float = "right"
            removeDiv.innerHTML = "Remove (X)"
            div.appendChild(removeDiv)
            
            removeDiv.onclick = () => {
                attachmentList.removeChild(div)
                var i = gig.attachments.indexOf(media)
                if (i > -1) {
                    gig.attachments.splice(i, 1)
                }
            }

            var statusDiv = document.createElement("div")
            statusDiv.style.float = "right"
            div.appendChild(statusDiv)

            return statusDiv
        }

        var uploadParameters = {
            thingId: gig.id, 
            div: dropZone,
            onstartupload: media => {
                if (!gig.attachments) {
                    gig.attachments = []
                }
                gig.attachments.push(media)

                var statusDiv = makeAttachmentEl(media)
                statusDiv.innerHTML = "Uploading..."
                return statusDiv
            },
            onfail: (media, statusDiv, message) => {
                statusDiv.innerHTML = "<font color='red'>Error</font> " + message
            },
            onsuccess: (media, statusDiv) => {
                statusDiv.innerHTML = "<font color='green'>Uploaded</font>" 
            }
        }
        dndupload.setupDropZone(uploadParameters)
            

        </script>
    
    </body>
</html>
